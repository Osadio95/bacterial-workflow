// Configuration par défaut pour la pipeline

manifest {
    name = 'Genomic Analysis Pipeline'
    author = 'Ousmane SADIO'
    homePage = 'https://github.com/osadio95/bacterial-workflow'
    description = 'Pipeline Nextflow pour l\'analyse de données génomiques illumina'
    mainScript = 'main.nf'
    nextflowVersion = '>=21.10.0'
    version = '1.0.0'
}

// Configuration des processus
process {
    withLabel: process_low {
        cpus = { check_max( 2 * task.attempt, 'cpus' ) }
        memory = { check_max( 4.GB * task.attempt, 'memory' ) }
        time = { check_max( 4.h * task.attempt, 'time' ) }
    }
    withLabel: process_medium {
        cpus = { check_max( 6 * task.attempt, 'cpus' ) }
        memory = { check_max( 16.GB * task.attempt, 'memory' ) }
        time = { check_max( 8.h * task.attempt, 'time' ) }
    }
    withLabel: process_high {
        cpus = { check_max( 12 * task.attempt, 'cpus' ) }
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 16.h * task.attempt, 'time' ) }
    }
}

// Fonction pour vérifier la valeur maximale
def check_max(obj, type) {
    if (type == 'memory') {
        try {
            if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
                return params.max_memory as nextflow.util.MemoryUnit
            else
                return obj
        } catch (all) {
            return obj
        }
    } else if (type == 'time') {
        try {
            if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
                return params.max_time as nextflow.util.Duration
            else
                return obj
        } catch (all) {
            return obj
        }
    } else if (type == 'cpus') {
        try {
            return Math.min( obj, params.max_cpus as int )
        } catch (all) {
            return obj
        }
    }
}

// Configuration pour l'utilisation de Docker
docker {
    enabled = true
    fixOwnership = true
    runOptions = '-u $(id -u):$(id -g) -v /home/m3/pipeline_nf/projectDir/db:/db'
}

// Configuration des paramètres par défaut
params {
    max_memory = 128.GB
    max_cpus = 16
    max_time = 72.h
    bakta = false 
}

// Configuration pour l'exécution
executor {
    $local {
        cpus = params.max_cpus
        memory = params.max_memory
    }
}
